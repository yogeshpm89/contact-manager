{"version":3,"sources":["Context/context.js","Components/contact/Contact.js","Components/contact/ContactList.js","Components/forms/TextInputGroup.js","Components/contact/AddContact.js","Pages/About.js","Components/Header/Header.js","Pages/NotFound.js","Components/Test/Test.js","Components/contact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contactList","filter","contact","payload","id","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showAge","onDelete","a","delete","name","age","arrowClass","className","onClick","email","phone","to","style","cursor","color","bind","ContactList","masterContactList","cloneDeep","deleteContact","item","onSearch","event","indexOf","target","placeholder","onChange","index","key","toString","TextInputGroup","label","error","htmlFor","classNames","prototype","PropTypes","string","isRequired","func","object","defaultProps","AddContact","errors","onSubmit","preventDefault","isValid","newContact","post","respose","history","push","About","match","params","Header","NotFound","Test","title","body","console","log","fetch","then","response","json","prevProps","prevState","nextProps","test","EditContact","updatedContact","put","App","username","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.201b5943.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contactList: state.contactList.filter(contact => {\r\n                    const item = action.payload;\r\n                    return (item.id !== contact.id);\r\n                })\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contactList: [action.payload, ...state.contactList]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contactList: state.contactList.map((contact) => contact.id === action.payload.id ? contact = action.payload : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends React.Component {\r\n    state = {\r\n        contactList: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({ contactList: res.data })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react';\r\nimport { Consumer } from '../../Context/context'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nclass Contact extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: 'Yogesh',\r\n            age: 32\r\n        }\r\n    }\r\n\r\n    showAge = () => {\r\n        this.setState({\r\n            \"showAge\": !this.state.showAge\r\n        });\r\n    }\r\n\r\n    onDelete = async (contact, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${contact.id}`);\r\n        dispatch({\r\n            type: 'DELETE_CONTACT',\r\n            payload: contact\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        const arrowClass = !this.state.showAge ? \"fa fa-angle-double-down\" : \"fa fa-angle-double-up\" ;\r\n        const contact = this.props.contact;\r\n        return <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return <div>\r\n                {contact && \r\n                    <div className=\"row text-left\">\r\n                        <div className=\"col-sm-10\" onClick={this.showAge}>\r\n                            <strong>\r\n                                {contact.name}\r\n                                &nbsp;&nbsp;\r\n                                <span onClick={this.showAge}>\r\n                                    <i className={arrowClass}></i>\r\n                                </span>\r\n                            </strong>\r\n                            \r\n                            { this.state.showAge ?  \r\n                                <div className=\"card-body\">\r\n                                    <p>Email address: {contact.email}</p>\r\n                                    <p>phone: {contact.phone}</p> \r\n                                </div>\r\n                            : null }\r\n                        </div>\r\n                        \r\n                        <div className=\"col-sm-1\">\r\n                            <Link to={`contact/edit/${contact.id}`}>\r\n                                <i className=\"fa fa-pencil fa-2x\"\r\n                                    style={{\r\n                                        cursor: 'pointer',\r\n                                        color: 'black'\r\n                                    }}></i>\r\n                            </Link>\r\n                            &nbsp;&nbsp;\r\n                            <i className=\"fa fa-remove fa-2x\" \r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                color: 'red'\r\n                            }}\r\n                            onClick={this.onDelete.bind(this, contact, dispatch)}></i>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                \r\n    \r\n            </div>\r\n            }}\r\n        </Consumer>\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Contact from './Contact';\r\nimport cloneDeep from 'lodash';\r\nimport { Consumer } from '../../Context/context';\r\n\r\nclass ContactList extends React.Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        const contactList =  [];\r\n        const masterContactList = cloneDeep(contactList);\r\n        debugger;\r\n        this.state = {\r\n            contactList : contactList,\r\n            masterContactList: masterContactList\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const deleteContact = (contact) => {\r\n            const contactList = this.state.contactList.filter((item) => {\r\n                return (item.name !== contact.name && item.age !== contact.age);\r\n            })\r\n            this.setState({contactList: contactList});\r\n        }\r\n\r\n        const onSearch = (event) => {\r\n            const contactList = this.state.masterContactList.filter((item) => {\r\n                return item.name.indexOf(event.target.value) > -1;\r\n            })\r\n            this.setState({contactList: contactList});\r\n        }\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    return (\r\n                    <div>\r\n                        <h4 className=\"\">Contact List</h4>\r\n                        <div className=\"form-group m-sm-2\">\r\n                            <input type=\"text\" className=\"form-control p-sm-1\" placeholder=\"search...\" id=\"search\" onChange={onSearch}/>\r\n                        </div>\r\n                        <ul className=\"list-group m-sm-2\">\r\n                            {value.contactList.map((contact, index) => {\r\n                                return <li key={index.toString()} className=\"list-group-item\">\r\n                                    <Contact contact={contact} deleteContact={deleteContact}></Contact>\r\n                                </li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default ContactList;","\r\nimport  React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n    return (\r\n\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type}\r\n                name={name}\r\n                className={classNames(\r\n                    \"form-control\", \r\n                    \"form-control-lg\", {\r\n                        'is-invalid': error\r\n                    })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}></input>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.prototype = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired, \r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired, \r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.object\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React from 'react'\r\nimport {Consumer} from '../../Context/context';\r\nimport TextInputGroup from '../forms/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, event) => {\r\n        event.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            isValid = false;\r\n        }\r\n        if (!email) {\r\n            this.setState({errors: {age: 'Email is required'}});\r\n            isValid = false;\r\n        }\r\n\r\n        if (!phone) {\r\n            this.setState({errors: {age: 'Phone is required'}});\r\n            isValid = false;\r\n        }\r\n\r\n        if (!isValid) return;\r\n\r\n        const newContact = { name, email, phone };\r\n\r\n        const respose = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({\r\n            type: 'ADD_CONTACT',\r\n            payload: respose.data\r\n        });\r\n        this.setState({name: '',age: '', errors: {}});\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        name=\"name\" label=\"Name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        name=\"email\" label=\"Email Address\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                     <TextInputGroup \r\n                                        name=\"phone\" label=\"Phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input className=\"btn btn-dark btn-block\" type=\"submit\" value=\"Add Contact\"></input>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React from 'react'\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card mb-3\">\r\n                <h1 className=\"display-4\">About page</h1>\r\n                <p>Simple App to manage contacts</p>\r\n                <p className=\"text-secondary\">v1.0.0</p>\r\n                <p>{this.props.match.params.id}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                    <h1>Contact Manager Application</h1>\r\n                    <nav className=\"pull-left navbar navbar-expand-sm\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\">Add</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about/\" className=\"nav-link\">About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/test/\" className=\"nav-link\">Test</Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1 className=\"display-4\">404 Not found</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\n\r\nclass Test extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount...\");\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }))\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"componentDidUpdate...\");\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log(\"componentWillMount...\");\r\n    // }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log(\"componentWillUpdate...\");\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log(\"componentWillReceiveProps...\");\r\n    // }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return {\r\n            test: 'test1'\r\n        };\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate...\");\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react'\r\nimport {Consumer} from '../../Context/context';\r\nimport TextInputGroup from '../forms/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const response = axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = (await response).data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, event) => {\r\n        event.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            isValid = false;\r\n        }\r\n        if (!email) {\r\n            this.setState({errors: {age: 'Email is required'}});\r\n            isValid = false;\r\n        }\r\n\r\n        if (!phone) {\r\n            this.setState({errors: {age: 'Phone is required'}});\r\n            isValid = false;\r\n        }\r\n\r\n        if (!isValid) return;\r\n\r\n        const updatedContact = { name, email, phone };\r\n        const {id} = this.props.match.params;\r\n        const respose = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: respose.data\r\n        });\r\n        this.setState({name: '',age: '', errors: {}});\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        name=\"name\" label=\"Name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        name=\"email\" label=\"Email Address\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                     <TextInputGroup \r\n                                        name=\"phone\" label=\"Phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input className=\"btn btn-dark btn-block\" type=\"submit\" value=\"Update Contact\"></input>\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\nimport './App.css';\nimport ContactList from './Components/contact/ContactList';\nimport { Provider } from './Context/context';\nimport AddContact from './Components/contact/AddContact';\nimport About from './Pages/About';\nimport {HashRouter as Router, Route, Switch}  from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport NotFound from './Pages/NotFound';\nimport Test from './Components/Test/Test';\nimport EditContact from './Components/contact/EditContact';\n\nexport const ThemeContext = React.createContext('light');\nexport const UserContext = React.createContext({username: 'test'});\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n      <Provider>\n        <Router>\n          <div className=\"container-fluid\">\n            <Header></Header>\n          </div>\n          <div className=\"container-fluid\">\n            <Switch>\n              <Route exact path=\"/\" component={ContactList}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route exact component={NotFound}></Route>\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    </div>\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}